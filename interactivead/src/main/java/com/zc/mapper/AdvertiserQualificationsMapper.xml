<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdvertiserQualifications" >
  <resultMap id="BaseResultMap" type="com.zc.entity.AdvertiserQualifications" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="advertiser_id" property="advertiserId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="state_msg" property="stateMsg" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />

  </resultMap>

  <sql id="Base_Column_List" >
    id  , advertiser_id , name , img_url , state , state_msg , create_time
  </sql>

  <select id="selectByWhere" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from advertiser_qualifications
    <where >
       <include refid="where_Column_List" />
    </where>
    <if test="orderProperty != null and orderDirection != null " >
          ORDER BY ${orderProperty} ${orderDirection}
    </if>
    <if test="pageStart != null and pageLimit != null " >
       limit #{pageStart},#{pageLimit}
     </if>
  </select>

  <select id="selectByWhereCount" resultType="java.lang.Long" >
    select count(*) from advertiser_qualifications
    <where >
       <include refid="where_Column_List" />
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from advertiser_qualifications
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from advertiser_qualifications
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insert" parameterType="com.zc.entity.AdvertiserQualifications" >
    insert into advertiser_qualifications (id
     , advertiser_id , name , img_url , state , state_msg , create_time
      )
    values (#{id},
     , #{advertiserId} , #{name} , #{imgUrl} , #{state} , #{stateMsg} , #{createTime}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.zc.entity.AdvertiserQualifications" >
    insert into advertiser_qualifications
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="advertiserId != null" >
        advertiser_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="imgUrl != null" >
        img_url,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateMsg != null" >
        state_msg,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="advertiserId != null" >
        #{advertiserId},
      </if>
      <if test="name != null" >
        #{name},
      </if>
      <if test="imgUrl != null" >
        #{imgUrl},
      </if>
      <if test="state != null" >
        #{state},
      </if>
      <if test="stateMsg != null" >
        #{stateMsg},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>

    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zc.entity.AdvertiserQualifications" >
    update advertiser_qualifications
    <set>
      <if test="advertiserId != null" >
        advertiser_id = #{advertiserId},
      </if>
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="imgUrl != null" >
        img_url = #{imgUrl},
      </if>
      <if test="state != null" >
        state = #{state},
      </if>
      <if test="stateMsg != null" >
        state_msg = #{stateMsg},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime},
      </if>

    </set>
    where id = #{id}
  </update>

  <sql id="where_Column_List" >
      <if test="advertiserId != null" >
        AND advertiser_id = #{advertiserId}
      </if>
      <if test="name != null" >
        AND name = #{name}
      </if>
      <if test="imgUrl != null" >
        AND img_url = #{imgUrl}
      </if>
      <if test="state != null" >
        AND state = #{state}
      </if>
      <if test="stateMsg != null" >
        AND state_msg = #{stateMsg}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime}
      </if>
      <if test="createTimeStart != null and createTimeStart != ''" >
        AND create_time &gt;= #{createTimeStart}
      </if>
      <if test="createTimeEnd != null and createTimeEnd != ''" >
        AND create_time &lt; #{createTimeEnd}
      </if>
      <if test="idList != null" >
        AND id in
        <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="advertiserIdList != null" >
        AND advertiser_id in
        <foreach collection="advertiserIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="nameList != null" >
        AND name in
        <foreach collection="nameList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="imgUrlList != null" >
        AND img_url in
        <foreach collection="imgUrlList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="stateList != null" >
        AND state in
        <foreach collection="stateList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="stateMsgList != null" >
        AND state_msg in
        <foreach collection="stateMsgList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="createTimeList != null" >
        AND create_time in
        <foreach collection="createTimeList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="advertiserIdLike != null" >
        AND advertiser_id like #{advertiserIdLike}
      </if>
      <if test="nameLike != null" >
        AND name like #{nameLike}
      </if>
      <if test="imgUrlLike != null" >
        AND img_url like #{imgUrlLike}
      </if>
      <if test="stateLike != null" >
        AND state like #{stateLike}
      </if>
      <if test="stateMsgLike != null" >
        AND state_msg like #{stateMsgLike}
      </if>
      <if test="createTimeLike != null" >
        AND create_time like #{createTimeLike}
      </if>
       <if test="fullTextSearchValue != null" >
           AND (
              advertiser_id like #{fullTextSearchValue}
           or name like #{fullTextSearchValue}
           or img_url like #{fullTextSearchValue}
           or state like #{fullTextSearchValue}
           or state_msg like #{fullTextSearchValue}
           or create_time like #{fullTextSearchValue}
           )
      </if>

  </sql>
</mapper>