<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SignTicket" >
  <resultMap id="BaseResultMap" type="com.zc.entity.SignTicket" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="sub_title" property="subTitle" jdbcType="VARCHAR" />
    <result column="limitation" property="limitation" jdbcType="VARCHAR" />
    <result column="needs_gold" property="needsGold" jdbcType="INTEGER" />
    <result column="is_new" property="isNew" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="is_hot" property="isHot" jdbcType="INTEGER" />

  </resultMap>

  <sql id="Base_Column_List" >
    id  , logo , title , sub_title , limitation , needs_gold , is_new , type , is_hot
  </sql>

  <select id="selectByWhere" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from sign_ticket
    <where >
       <include refid="where_Column_List" />
    </where>
    <if test="orderProperty != null and orderDirection != null " >
          ORDER BY ${orderProperty} ${orderDirection}
    </if>
    <if test="pageStart != null and pageLimit != null " >
       limit #{pageStart},#{pageLimit}
     </if>
  </select>

  <select id="selectByWhereCount" resultType="java.lang.Long" >
    select count(*) from sign_ticket
    <where >
       <include refid="where_Column_List" />
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sign_ticket
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sign_ticket
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insert" parameterType="com.zc.entity.SignTicket" >
    insert into sign_ticket (id
     , logo , title , sub_title , limitation , needs_gold , is_new , type , is_hot
      )
    values (#{id},
     , #{logo} , #{title} , #{subTitle} , #{limitation} , #{needsGold} , #{isNew} , #{type} , #{isHot}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.zc.entity.SignTicket" >
    insert into sign_ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="subTitle != null" >
        sub_title,
      </if>
      <if test="limitation != null" >
        limitation,
      </if>
      <if test="needsGold != null" >
        needs_gold,
      </if>
      <if test="isNew != null" >
        is_new,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isHot != null" >
        is_hot,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="logo != null" >
        #{logo},
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="subTitle != null" >
        #{subTitle},
      </if>
      <if test="limitation != null" >
        #{limitation},
      </if>
      <if test="needsGold != null" >
        #{needsGold},
      </if>
      <if test="isNew != null" >
        #{isNew},
      </if>
      <if test="type != null" >
        #{type},
      </if>
      <if test="isHot != null" >
        #{isHot},
      </if>

    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zc.entity.SignTicket" >
    update sign_ticket
    <set>
      <if test="logo != null" >
        logo = #{logo},
      </if>
      <if test="title != null" >
        title = #{title},
      </if>
      <if test="subTitle != null" >
        sub_title = #{subTitle},
      </if>
      <if test="limitation != null" >
        limitation = #{limitation},
      </if>
      <if test="needsGold != null" >
        needs_gold = #{needsGold},
      </if>
      <if test="isNew != null" >
        is_new = #{isNew},
      </if>
      <if test="type != null" >
        type = #{type},
      </if>
      <if test="isHot != null" >
        is_hot = #{isHot},
      </if>

    </set>
    where id = #{id}
  </update>

  <sql id="where_Column_List" >
      <if test="logo != null" >
        AND logo = #{logo}
      </if>
      <if test="title != null" >
        AND title = #{title}
      </if>
      <if test="subTitle != null" >
        AND sub_title = #{subTitle}
      </if>
      <if test="limitation != null" >
        AND limitation = #{limitation}
      </if>
      <if test="needsGold != null" >
        AND needs_gold = #{needsGold}
      </if>
      <if test="isNew != null" >
        AND is_new = #{isNew}
      </if>
      <if test="type != null" >
        AND type = #{type}
      </if>
      <if test="isHot != null" >
        AND is_hot = #{isHot}
      </if>
      <if test="idList != null" >
        AND id in
        <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="logoList != null" >
        AND logo in
        <foreach collection="logoList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="titleList != null" >
        AND title in
        <foreach collection="titleList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="subTitleList != null" >
        AND sub_title in
        <foreach collection="subTitleList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="limitationList != null" >
        AND limitation in
        <foreach collection="limitationList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="needsGoldList != null" >
        AND needs_gold in
        <foreach collection="needsGoldList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="isNewList != null" >
        AND is_new in
        <foreach collection="isNewList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="typeList != null" >
        AND type in
        <foreach collection="typeList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="isHotList != null" >
        AND is_hot in
        <foreach collection="isHotList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="logoLike != null" >
        AND logo like #{logoLike}
      </if>
      <if test="titleLike != null" >
        AND title like #{titleLike}
      </if>
      <if test="subTitleLike != null" >
        AND sub_title like #{subTitleLike}
      </if>
      <if test="limitationLike != null" >
        AND limitation like #{limitationLike}
      </if>
      <if test="needsGoldLike != null" >
        AND needs_gold like #{needsGoldLike}
      </if>
      <if test="isNewLike != null" >
        AND is_new like #{isNewLike}
      </if>
      <if test="typeLike != null" >
        AND type like #{typeLike}
      </if>
      <if test="isHotLike != null" >
        AND is_hot like #{isHotLike}
      </if>
       <if test="fullTextSearchValue != null" >
           AND (
              logo like #{fullTextSearchValue}
           or title like #{fullTextSearchValue}
           or sub_title like #{fullTextSearchValue}
           or limitation like #{fullTextSearchValue}
           or needs_gold like #{fullTextSearchValue}
           or is_new like #{fullTextSearchValue}
           or type like #{fullTextSearchValue}
           or is_hot like #{fullTextSearchValue}
           )
      </if>

  </sql>
</mapper>